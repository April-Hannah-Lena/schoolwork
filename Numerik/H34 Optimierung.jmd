
## H34

```julia
using Plots, LinearAlgebra

function plotnb(A, b, c, xy)
    fig = contour(xy..., (x1, x2) -> c' * [x1; x2], 
                  fill=true, c=:lightrainbow);
    contour!(fig, xy..., (x1, x2) -> (A*[x1, x2])[1], 
             levels=0:0.5:b[1]);
    contour!(fig, xy..., (x1, x2) -> (A*[x1, x2])[2], 
             levels=0:0.5:b[2]);
    return fig
end
```

```julia
xy = (0:0.1:4, 0:0.1:4)
A = [-1. 2.;
      3. 1.]
b, c = [4., 9.], [1., 1.]
plotnb(A, b, c, xy)
```

```julia
xy = (0:0.1:50, 0:0.1:50)
A = [-1. 2.;
      1. -2.]
b, c = [4., -2.], [1., 1.]
plotnb(A, b, c, xy)
```

```julia
xy = (0:0.1:5, 0:0.1:5)
A = [-1. 2.;
      3. 1.]
b, c = [4., 9.], [0., 0.]
plotnb(A, b, c, xy)
```

```julia
xy = (0:0.1:50, 0:0.1:50)
A = [-1. 2.;
      1. -2.]
b, c = [4., -5.], [1., 1.]
plotnb(A, b, c, xy)
```

```julia
xy = (0:0.1:4, 0:0.1:4)
A = [-1. 2.;
      3. 1.]
b, c = [4., 9.], [3., 1.]
plotnb(A, b, c, xy)
```

```julia
xy = (0:0.1:4, 0:0.1:4)
A = [-1. 2.;
      3. 1.]
b, c = [4., 9.], [2., 2.]
plotnb(A, b, c, xy)
```
